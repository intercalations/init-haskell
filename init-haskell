#! /usr/bin/env nix-shell
#! nix-shell --pure --keep NIX_SSL_CERT_FILE --keep GITHUB_TOKEN -i bash -p git gitAndTools.git-ignore niv direnv nix
set -Eeuxo pipefail

# Variables
export author="Asad Saeeduddin"
export email="masaeedu@gmail.com"
export ghc="ghc865"
export snapshot="2020-01-01T00:00:00Z"

export projectname=${PWD##*/}

# Set up git
git init
git-ignore haskell >./.gitignore
echo '*.cabal' >> .gitignore

# Set up niv
mkdir nix
cat <<EOF > ./nix/sources.json
{
    "ghcide-nix": {
        "branch": "master",
        "description": "Nix installation for ghcide",
        "homepage": "https://github.com/digital-asset/ghcide",
        "owner": "hercules-ci",
        "repo": "ghcide-nix",
        "rev": "55d5a88187bff73e4cb15f366bda3c8e6119954e",
        "sha256": "18gjqk6vgzpja3v14drpn8fl84hmda5gkr6wxggxk320qdajdxw1",
        "type": "tarball",
        "url": "https://github.com/hercules-ci/ghcide-nix/archive/55d5a88187bff73e4cb15f366bda3c8e6119954e.tar.gz",
        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"
    },
    "iohk-hnix": {
        "branch": "master",
        "description": "Alternative Haskell Infrastructure for Nixpkgs",
        "homepage": "https://input-output-hk.github.io/haskell.nix",
        "owner": "input-output-hk",
        "repo": "haskell.nix",
        "rev": "ce65bf2c0eaf6096a60f7d4d04cc26d01012ce01",
        "sha256": "1grmcm47bihlgy07s2m9wjq427mgxr66fwhb2jg2xp49dckdr4y2",
        "type": "tarball",
        "url": "https://github.com/input-output-hk/haskell.nix/archive/ce65bf2c0eaf6096a60f7d4d04cc26d01012ce01.tar.gz",
        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"
    },
    "iohk-nixpkgs": {
        "branch": "a8f81dc037a5977414a356dd068f2621b3c89b60",
        "description": "Nix Packages collection",
        "homepage": null,
        "owner": "input-output-hk",
        "repo": "nixpkgs",
        "rev": "a8f81dc037a5977414a356dd068f2621b3c89b60",
        "sha256": "01z13axll5g5yl00lz9adr2jw2bs12g9skhbb1vxy8p7fjjbhhhm",
        "type": "tarball",
        "url": "https://github.com/input-output-hk/nixpkgs/archive/a8f81dc037a5977414a356dd068f2621b3c89b60.tar.gz",
        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"
    },
    "niv": {
        "branch": "master",
        "description": "Easy dependency management for Nix projects",
        "homepage": "https://github.com/nmattia/niv",
        "owner": "nmattia",
        "repo": "niv",
        "rev": "2ecfd86b631714b457e56d70dd83fa60435baeb6",
        "sha256": "01j6727cws8blg1npp54b4w6xa0gpgyzhyws2vqgp8clnlnmqqhi",
        "type": "tarball",
        "url": "https://github.com/nmattia/niv/archive/2ecfd86b631714b457e56d70dd83fa60435baeb6.tar.gz",
        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"
    },
    "nixpkgs": {
        "branch": "nixos-unstable",
        "description": "A read-only mirror of NixOS/nixpkgs tracking the released channels. Send issues and PRs to",
        "homepage": "https://github.com/NixOS/nixpkgs",
        "owner": "NixOS",
        "repo": "nixpkgs-channels",
        "rev": "a21c2fa3ea2b88e698db6fc151d9c7259ae14d96",
        "sha256": "1z3kxlbz6bqx1dlagcazg04vhk67r8byihzf959c3m0laf2a1w7y",
        "type": "tarball",
        "url": "https://github.com/NixOS/nixpkgs-channels/archive/a21c2fa3ea2b88e698db6fc151d9c7259ae14d96.tar.gz",
        "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"
    }
}
EOF
niv init

# Create hpack project
cat <<EOF > ./package.yaml
spec-version: 0.30.0
name: $projectname
author: ${author}
maintainer: ${email}
license: MIT

build-type: Simple

source-dirs: src
dependencies:
- { name: "base", version: '>=4.12 && <4.13' }

ghc-options: -Wall
default-extensions:
- GADTs

- StandaloneDeriving
- DeriveFunctor
- DerivingVia
- GeneralizedNewtypeDeriving

- ScopedTypeVariables
- RankNTypes
- QuantifiedConstraints

- TypeApplications
- TypeOperators
- MultiParamTypeClasses

- ConstraintKinds
- DataKinds
- PolyKinds
- KindSignatures

- UndecidableInstances
- FlexibleInstances
- FlexibleContexts
- DefaultSignatures

library: {}
executable:
  main: Main.hs
EOF

cat <<EOF > ./cabal.project
packages: .
index-state: $snapshot
EOF

# Add default.nix
cat <<EOF > ./default.nix
let
  sources = import ./nix/sources.nix;
  compilerVersion = "${ghc}";
  pkgs = (import sources.iohk-nixpkgs) (import sources.iohk-hnix);
in
pkgs.haskell-nix.cabalProject {
  src = pkgs.haskell-nix.haskellLib.cleanGit { src = ./.; };
  ghc = pkgs.buildPackages.pkgs.haskell-nix.compiler.\${compilerVersion};
}
EOF

cat << EOF > ./shell.nix
let
  sources = import ./nix/sources.nix;
  compilerVersion = "${ghc}";
  ghcide = (import sources.ghcide-nix {})."ghcide-\${compilerVersion}";
  pkgs = import sources.iohk-nixpkgs {};
  pkgs' = import sources.nixpkgs {};
  hspkgs = import ./default.nix;
in
hspkgs.shellFor {
  withHoogle = true;
  buildInputs = [
    ghcide
    pkgs.haskellPackages.ghcid
    pkgs'.cabal-install
    pkgs'.haskellPackages.hpack
  ];
}
EOF

# Add hie.yaml file to help ghcide figure out what's what
cat <<EOF > ./hie.yaml
cradle: { cabal: { component: "all" } }
EOF

# Create direnv file
# TODO: Remove the grep stuff once https://github.com/hercules-ci/ghcide-nix/issues/26 is resolved
cat << 'EOF' > .envrc
use nix
source <(grep 'export NIX_' $(which ghc))
EOF

cat << 'EOF' > CACHES.md
This project uses various nix expressions for building code. In order to avoid building a huge amount of stuff at once, you might want to enable the following [cachix](https://cachix.org/) caches:

- nix-tools
- hercules-ci

EOF

# Add a hello world source file
mkdir src

cat <<EOF > ./src/Main.hs
module Main where

main :: IO ()
main = putStrLn "Hello, Haskell!"
EOF

git add .
