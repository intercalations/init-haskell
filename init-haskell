#! /usr/bin/env nix-shell
#! nix-shell --pure --keep NIX_SSL_CERT_FILE --keep GITHUB_TOKEN -i bash -p git mustache-go niv direnv nix
set -Eeuxo pipefail

# init-haskell location
base=$(dirname "$(readlink -f "$0")")

# Variables
data=$(mktemp)
projectname=${PWD##*/}
cat <<EOF >$data
{ "author": "$(git config user.name)"
, "email": "$(git config user.email)"
, "ghc": "ghc8103"
, "snapshot": "2021-02-01T00:00:00Z"
, "projectname": "${projectname}"
}
EOF

# Set up git
git init
mustache $base/templates/.gitignore >.gitignore <$data

# Set up niv
mkdir nix || exit 0
mustache $base/templates/sources.json >./nix/sources.json <$data
niv init

# Create hpack project
mustache $base/templates/cabal.project >./cabal.project <$data
mustache $base/templates/package.yaml >./package.yaml <$data

# Add nix files
mustache $base/templates/snapshot.nix >./snapshot.nix <$data
mustache $base/templates/compiler.nix >./compiler.nix <$data
mustache $base/templates/default.nix >./default.nix <$data
mustache $base/templates/shell.nix >./shell.nix <$data

# Add hie.yaml file to help language server figure out what's what
mustache $base/templates/hie.yaml >./hie.yaml <$data

# Create direnv file
mustache $base/templates/.envrc >./.envrc <$data

# Add note about caching
mustache $base/templates/CACHES.md >./CACHES.md <$data

# Add a hello world source file
mkdir lib || exit 0
mustache $base/templates/Lib.hs >./lib/Lib.hs <$data
mkdir app || exit 0
mustache $base/templates/Main.hs >./app/Main.hs <$data

git add .
